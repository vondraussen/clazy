name: CMake

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        path: 'clazy'

    - uses: actions/checkout@v4
      with:
        path: 'llvm'
        repository: 'llvm/llvm-project.git'
        ref: 'llvmorg-11.0.0'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ github.workspace }}/llvm/build -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\llvm-install\
        -DLLVM_EXPORT_SYMBOLS_FOR_PLUGINS=ON
        -DLLVM_INCLUDE_EXAMPLES=OFF
        -DLLVM_TARGETS_TO_BUILD="X86"
        -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_BUILD_TYPE=Release
        -G "Ninja" ${{ github.workspace }}/llvm

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ github.workspace }}/llvm/build --config Release
